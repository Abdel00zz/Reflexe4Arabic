/**
 * @file This file contains the StorySpark component.
 * It allows users to select a few words and uses the Gemini AI to generate a short story based on them.
 */

import React, { useState } from 'react';
import { storyWords } from '../data/arabicContent';
import { StoryWord } from '../types';
import { generateStory } from '../services/geminiService';

export const StorySpark: React.FC = () => {
    // State to track which words the user has selected.
    const [selectedWords, setSelectedWords] = useState<string[]>([]);
    // State to store the story generated by the AI.
    const [generatedStory, setGeneratedStory] = useState<string>('');
    // State to manage the loading status while waiting for the AI response.
    const [isLoading, setIsLoading] = useState<boolean>(false);
    // State to display validation errors to the user.
    const [error, setError] = useState<string>('');

    /**
     * Toggles the selection of a word.
     * @param {string} word - The word to add or remove from the selection.
     */
    const toggleWordSelection = (word: string) => {
        setSelectedWords(prev => 
            prev.includes(word) 
            ? prev.filter(w => w !== word) 
            : [...prev, word]
        );
    };

    /**
     * Handles the story generation process.
     * It validates the input, sets loading state, calls the AI service, and displays the result.
     */
    const handleGenerateStory = async () => {
        // Validate that at least two words are selected.
        if (selectedWords.length < 2) {
            setError('اَلرَّجَاءُ اِخْتِيَارُ كَلِمَتَيْنِ عَلَى الْأَقَلِّ لِبَدْءِ الْقِصَّةِ.');
            return;
        }
        setError('');
        setIsLoading(true);
        setGeneratedStory('');

        // Call the service to generate the story.
        const story = await generateStory(selectedWords);
        setGeneratedStory(story);
        setIsLoading(false);
    };

    return (
        <div className="flex flex-col items-center p-4 sm:p-8">
            <div className="w-full max-w-3xl bg-white rounded-2xl shadow-xl p-6 sm:p-8 text-center">
                <div className="text-4xl sm:text-5xl mb-4">✨</div>
                <h2 className="text-2xl sm:text-3xl font-bold text-slate-700 mb-2">شَرَارَةُ الْقِصَصِ</h2>
                <p className="text-lg sm:text-xl text-slate-500 mb-8">اِخْتَرْ بَعْضَ الْكَلِمَاتِ، وَدَعِ الذَّكَاءَ الاِصْطِنَاعِيَّ يَنْسُجْ لَكَ قِصَّةً قَصِيرَةً!</p>

                {/* Word selection buttons */}
                <div className="flex flex-wrap justify-center gap-3 sm:gap-4 mb-8">
                    {storyWords.map((item: StoryWord) => (
                        <button
                            key={item.id}
                            onClick={() => toggleWordSelection(item.word)}
                            className={`px-4 py-2 sm:px-6 sm:py-3 text-base sm:text-lg font-semibold rounded-full transition-all duration-300 flex items-center gap-2 ${selectedWords.includes(item.word) ? 'bg-violet-500 text-white shadow-lg scale-110' : 'bg-slate-100 text-slate-700 hover:bg-slate-200'}`}
                        >
                            <span>{item.emoji}</span>
                            <span>{item.word}</span>
                        </button>
                    ))}
                </div>

                {error && <p className="text-red-500 mb-4">{error}</p>}

                {/* Generate Story Button */}
                <button
                    onClick={handleGenerateStory}
                    disabled={isLoading || selectedWords.length < 2}
                    className="bg-violet-600 text-white font-bold py-3 px-8 sm:py-4 sm:px-10 rounded-full text-lg sm:text-xl hover:bg-violet-700 transition-colors disabled:bg-slate-300 disabled:cursor-not-allowed"
                >
                    {isLoading ? 'أُفَكِّرُ فِي قِصَّةٍ...' : 'اِصْنَعِ الْقِصَّةَ!'}
                </button>

                {/* Loading Indicator */}
                {isLoading && (
                    <div className="mt-8">
                        <div className="animate-spin rounded-full h-10 w-10 sm:h-12 sm:w-12 border-b-4 border-violet-500 mx-auto"></div>
                        <p className="text-slate-500 mt-4">لَحَظَاتٍ مِنْ فَضْلِكَ، اَلْإِبْدَاعُ يَحْتَاجُ وَقْتًا...</p>
                    </div>
                )}

                {/* Display Generated Story */}
                {generatedStory && !isLoading && (
                    <div className="mt-8 p-4 sm:p-6 bg-violet-50 rounded-xl border-2 border-violet-200 animate-fade-in">
                        <h3 className="text-xl sm:text-2xl font-bold text-violet-800 mb-4">قِصَّتُكَ الصَّغِيرَةُ:</h3>
                        <p className="text-lg sm:text-xl text-slate-700 leading-relaxed">{generatedStory}</p>
                    </div>
                )}
            </div>
        </div>
    );
};